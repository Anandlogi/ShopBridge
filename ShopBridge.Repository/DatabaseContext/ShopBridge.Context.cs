//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ShopBridge.Repository.DatabaseContext
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ShopBridgeEntities : DbContext
    {
        public ShopBridgeEntities()
            : base("name=ShopBridgeEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<BillingAddressDetail> BillingAddressDetails { get; set; }
        public virtual DbSet<CartProductDetail> CartProductDetails { get; set; }
        public virtual DbSet<OrderDetail> OrderDetails { get; set; }
        public virtual DbSet<OrderedItemDetail> OrderedItemDetails { get; set; }
        public virtual DbSet<ProductCategory> ProductCategories { get; set; }
        public virtual DbSet<ProductDetail> ProductDetails { get; set; }
        public virtual DbSet<ProductsCategoryMapping> ProductsCategoryMappings { get; set; }
        public virtual DbSet<WishProductDetail> WishProductDetails { get; set; }
        public virtual DbSet<OrderSequence> OrderSequences { get; set; }
        public virtual DbSet<ProductImage> ProductImages { get; set; }
    
        public virtual int GetProductsSearchWise(string search, Nullable<int> pageIndex, Nullable<int> pageSize)
        {
            var searchParameter = search != null ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetProductsSearchWise", searchParameter, pageIndexParameter, pageSizeParameter);
        }
    
        public virtual int SaveProduct(string productName, Nullable<decimal> productPrice, Nullable<decimal> productOldPrice, Nullable<int> productAvailableQTY, string splOffer, string productDesc, string productCode, string productCategory, Nullable<int> productId)
        {
            var productNameParameter = productName != null ?
                new ObjectParameter("ProductName", productName) :
                new ObjectParameter("ProductName", typeof(string));
    
            var productPriceParameter = productPrice.HasValue ?
                new ObjectParameter("ProductPrice", productPrice) :
                new ObjectParameter("ProductPrice", typeof(decimal));
    
            var productOldPriceParameter = productOldPrice.HasValue ?
                new ObjectParameter("ProductOldPrice", productOldPrice) :
                new ObjectParameter("ProductOldPrice", typeof(decimal));
    
            var productAvailableQTYParameter = productAvailableQTY.HasValue ?
                new ObjectParameter("ProductAvailableQTY", productAvailableQTY) :
                new ObjectParameter("ProductAvailableQTY", typeof(int));
    
            var splOfferParameter = splOffer != null ?
                new ObjectParameter("SplOffer", splOffer) :
                new ObjectParameter("SplOffer", typeof(string));
    
            var productDescParameter = productDesc != null ?
                new ObjectParameter("ProductDesc", productDesc) :
                new ObjectParameter("ProductDesc", typeof(string));
    
            var productCodeParameter = productCode != null ?
                new ObjectParameter("ProductCode", productCode) :
                new ObjectParameter("ProductCode", typeof(string));
    
            var productCategoryParameter = productCategory != null ?
                new ObjectParameter("ProductCategory", productCategory) :
                new ObjectParameter("ProductCategory", typeof(string));
    
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SaveProduct", productNameParameter, productPriceParameter, productOldPriceParameter, productAvailableQTYParameter, splOfferParameter, productDescParameter, productCodeParameter, productCategoryParameter, productIdParameter);
        }
    
        public virtual ObjectResult<ProductDetail> GetProductsSearchWise1(string search, Nullable<int> pageIndex, Nullable<int> pageSize)
        {
            var searchParameter = search != null ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProductDetail>("GetProductsSearchWise1", searchParameter, pageIndexParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<ProductDetail> GetProductsSearchWise1(string search, Nullable<int> pageIndex, Nullable<int> pageSize, MergeOption mergeOption)
        {
            var searchParameter = search != null ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProductDetail>("GetProductsSearchWise1", mergeOption, searchParameter, pageIndexParameter, pageSizeParameter);
        }
    
        public virtual int GetProductsCategoryWise(string category, Nullable<int> pageIndex, Nullable<int> pageSize, ObjectParameter recordCount)
        {
            var categoryParameter = category != null ?
                new ObjectParameter("Category", category) :
                new ObjectParameter("Category", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetProductsCategoryWise", categoryParameter, pageIndexParameter, pageSizeParameter, recordCount);
        }
    
        public virtual ObjectResult<ProductDetail> GetProductsCategoryWise1(string category, Nullable<int> pageIndex, Nullable<int> pageSize, ObjectParameter recordCount)
        {
            var categoryParameter = category != null ?
                new ObjectParameter("Category", category) :
                new ObjectParameter("Category", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProductDetail>("GetProductsCategoryWise1", categoryParameter, pageIndexParameter, pageSizeParameter, recordCount);
        }
    
        public virtual ObjectResult<ProductDetail> GetProductsCategoryWise1(string category, Nullable<int> pageIndex, Nullable<int> pageSize, ObjectParameter recordCount, MergeOption mergeOption)
        {
            var categoryParameter = category != null ?
                new ObjectParameter("Category", category) :
                new ObjectParameter("Category", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProductDetail>("GetProductsCategoryWise1", mergeOption, categoryParameter, pageIndexParameter, pageSizeParameter, recordCount);
        }
    }
}
